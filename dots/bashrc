[ -z "$PS1" ] && return
HISTCONTROL=ignoredups:ignorespace
shopt -s histappend
HISTSIZE=1000
HISTFILESIZE=2000

shopt -s checkwinsize

[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

if [ -x /usr/bin/dircolors ]; then
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
  alias ls='ls --color=auto'

  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
fi

if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
  . /etc/bash_completion
fi

Color_Off="\[\e[0m\]"       # Text Reset
BRed="\[\e[1;31m\]"         # Red
BGreen="\[\e[1;32m\]"       # Green
IRed="\[\e[0;91m\]"         # Red
IGreen="\[\e[0;92m\]"       # Green
ICyan="\[\e[0;96m\]"        # Cyan
BYellow="\[\e[1;33m\]"      # Yellow
BCyan="\[\e[1;36m\]"        # Cyan

if [ $(whoami) != 'root' ]; then
  user_color=$BGreen
else
  user_color=$BRed
fi

function parse_git_branch {
  if ! git rev-parse --git-dir > /dev/null 2>&1; then
    return 0
  fi
  git_branch=$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')
  if git diff --quiet 2>/dev/null >&2; then
    git_color=$IGreen
  else
    git_color=$IRed
  fi
  echo -e "(git: $git_color$git_branch$Color_Off)"
}

PROMPT_COMMAND='PS1="$user_color\u$Color_Off[$ICyan\@$Color_Off]$BYellow\h:$BCyan$(pwd -P)$Color_Off $(parse_git_branch)\n~ \$ $Color_Off"'
PS2=$BRed"..> "$Color_Off

alias tmux="tmux -2"
alias ll="ls -l"

PATH=$PATH:"$HOME/.rvm/bin" # Add RVM to PATH for scripting
[[ -z $TMUX ]] && exec $(which tmux) -2
export LC_ALL=en_US.UTF-8
